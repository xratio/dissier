<?php

/**
 * Implements hook_node_info().
 */
function myct_node_info() {
  return array(
    'myct' => array(
      'name' => t('Досье'),
      'base' => 'node_content',
      'custom' => 1,
      'modified' => 1,
      'locked' => 0,
      'has_title' => TRUE,
      'description' => t('Данный тип материала позволяет добавить сущность досье с полями: Имя/Фамилия, Биография, Должность и другие.'),
      'title_label' => t('Имя/Фамилия'),
    )
  );
}


/**
 * Implements hook_form_alter().
 */
function myct_form_myct_node_form_alter(&$form, &$form_state, $form_id) {
 if(isset($form['#node']->nid)){ 
    $value = $form['#node']->nid;
    $result = db_query("SELECT job_position FROM job_table WHERE nid = {$value}");
    $zz = $result->fetchField();
  }
  else
  {
    $zz = '';
  }

  // Alter the 'MYCT' form here.
  $form['position'] = array(
    '#type' => 'textfield', 
    '#title' => t('Должность'), 
    '#default_value' => $zz,
    '#size' => 60, 
    '#maxlength' => 128, 
    //'#required' => TRUE,
  );  
  return $form;
}


function myct_node_insert($node) {
  db_insert('job_table')
    ->fields(array(
      'nid' => $node->nid,
      'job_position' => $node->position,
    ))
    ->execute();
}


/**
 * Implements hook_update().
 */
function myct_node_update($node) {
  db_update('job_table')
    ->fields(array('job_position' => $node->position))
    ->condition('nid', $node->nid)
    ->execute();
}


/**
 * Implements hook_view().
 */
function myct_node_view($node, $view_mode, $langcode) {
  $result = db_query("SELECT job_position FROM job_table WHERE nid = {$node->nid}");  
  $zz = $result->fetchField();
  $node->content['position'] = array(
    '#markup' => $zz,
    '#weight' => 2,
    //'#theme' => 'item_list',
  );

  if (drupal_is_front_page() && $view_mode == 'teaser'){
$form = drupal_get_form('myct_form', $node);
$node->content['data_collection_form'] = array(
  '#markup' => drupal_render($form),
  '#weight' => 10,
);
}
}

function myct_form($form, &$form_state, $node) {
	$nid = $node->nid;
    $form['actions']['delete'] = array(
      '#type' => 'submit',
      '#value' => t('Delete'),
      '#weight' => 15,
      '#submit' => array('myct_form_delete_submit'),
    );
	
	 $form['nid'] = array(
      '#value' => $nid,
      '#type' => 'hidden',
    );
  return $form;
  }

function myct_form_delete_submit($form, &$form_state) {
    $nid = $form_state['values']['nid'];
    $node = node_load($form_state['values']['nid']);
    node_delete($nid);
    cache_clear_all();
    watchdog('content', '@type: deleted %title.', array('@type' => $node->type, '%title' => $node->title));
    drupal_set_message(t('@type %title has been deleted.', array('@type' => node_type_get_name($node), '%title' => $node->title)));
	drupal_goto('/');
}
